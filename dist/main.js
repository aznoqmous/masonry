(()=>{"use strict";class t extends EventTarget{constructor(t,n={}){super(),this.opts=Object.assign({columnCount:2,gap:0},n),this.container=t,this.children=[...this.container.children],this.columns=[],this.bind(),this.build()}get columnCount(){return window.getComputedStyle(this.container)["column-count"]||this.opts.columnCount}get gap(){return window.getComputedStyle(this.container).gap||this.opts.gap}build(){this.disconnect();const t=this.columnCount;this.container.style.display="grid",this.container.style.alignItems="baseline",this.container.style.gridTemplateColumns=`repeat(${t}, 1fr)`,this.container.innerHTML="",this.columns=[];for(let n=0;n<t;n++){const t=document.createElement("div");this.container.appendChild(t),this.columns.push(t),t.style.display="flex",t.style.flexDirection="column",t.style.gap=this.gap}this.children.map((t=>this.append(t))),this.connect()}append(t){this.children.includes(t)||this.children.push(t),this.smallestColumn.append(t)}get smallestColumn(){return this.columns.map((t=>t._height=t.getBoundingClientRect().height)),this.columns.sort(((t,n)=>t._height-n._height))[0]}bind(){window.addEventListener("resize",(()=>{this.lastColumns&&this.lastColumns==this.columnCount||this.build(),this.lastColumns=this.columnCount})),this.observer=new MutationObserver((t=>{for(let n of t)n.addedNodes.forEach((t=>this.append(t)))})),this.connect()}connect(){this.observer.observe(this.container,{childList:!0})}disconnect(){this.observer.disconnect(this.container)}static bind(){document.querySelectorAll(".masonry").forEach((t=>new this(t)))}}window.Masonry=t,document.addEventListener("DOMContentLoaded",(()=>{t.bind()}))})();